@model Oodle.Models.ViewModels.TeacherVM

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>AddQuestion</title>
</head>
<body>
    @using (Html.BeginForm()) 
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>Add a Question to Quiz: @Model.quiz.QuizName</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
            @Html.HiddenFor(Model => Model.question.QuizID)
    
            <div class="form-group">
                @Html.LabelFor(model => model.question.Points, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.question.Points, new { htmlAttributes = new { @class = "form-control", min = 0, step = 1 } })
                    @Html.ValidationMessageFor(model => model.question.Points, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.question.QuestionText, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.question.QuestionText, new { htmlAttributes = new { @class = "form-control fleft" } })
                    @Html.ValidationMessageFor(model => model.question.QuestionText, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.answer.Answer1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.answer.Answer1, new { htmlAttributes = new { @class = "form-control fleft" } })
                    @Html.ValidationMessageFor(model => model.answer.Answer1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.answer.Answer2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.answer.Answer2, new { htmlAttributes = new { @class = "form-control fleft" } })
                    @Html.ValidationMessageFor(model => model.answer.Answer2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.answer.Answer3, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.answer.Answer3, new { htmlAttributes = new { @class = "form-control fleft" } })
                    @Html.ValidationMessageFor(model => model.answer.Answer3, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.answer.Answer4, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.answer.Answer4, new { htmlAttributes = new { @class = "form-control fleft" } })
                    @Html.ValidationMessageFor(model => model.answer.Answer4, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(Model => Model.answer.QuestionID, new { @value = "-1" })
            
            <div class="form-group">
                @Html.LabelFor(model => model.answer.CorrectAnswer, htmlAttributes: new { @class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.answer.CorrectAnswer, new { htmlAttributes = new { @class = "form-control", min = 1, max = 4, step = 1 } })
                    @Html.ValidationMessageFor(model => model.answer.CorrectAnswer, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Add Another Question" formaction=@Url.Action("AddAnother") formmethod="post" class="btn btn-default fleft" />
                    <input type="submit" value="Finish" formaction=@Url.Action("SaveQuestion") formmethod="post" class="btn btn-default fleft" />
                </div>
            </div>
        </div>
    }
    
    <div>
        @Html.ActionLink("Back to Quiz View", "ViewQuiz", "Teachers", new { QuizID = Model.quiz.QuizID, ClassID = Model.quiz.ClassID }, new { @class = "btn btn-default" })
    </div>
</body>
</html>
