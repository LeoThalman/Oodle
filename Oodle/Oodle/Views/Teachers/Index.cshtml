
@model Oodle.Models.ViewModels.TeacherVM

@{
    ViewBag.Title = "Index";
}

<link rel="stylesheet" type="text/css" href="~/Content/Site.css">



<div class="container">
    <div class="jumbotron">
        <h3 id="black-text" stlye="text-align:center">
            Welcome to your teacher homepage for: @Html.DisplayFor(Name => Model.cl.Name)
        </h3>
        <hr />

        <div class="testingURL" style="background-color:black;text-align:center">
            <a href="@Url.Action("Edit", "Teachers", new { ClassID = (Model.cl.ClassID)} )">
                Edit Class
            </a>
            <p style="display:inline;" id="black-text">----------------------</p>

            <a href="@Url.Action("Delete", "Teachers", new { ClassID = (Model.cl.ClassID)})">
                Delete Class
            </a>

        </div>

        <div class="container">


            <div class="container">
                <div class="col-lg-4" id="teacherPage">
                    <h3 id="black-text">Description</h3>
                    <p style="font-size:14px;" id="black-text">
                        @Html.DisplayFor(Description => Model.cl.Description)
                    </p>
                </div>
                <div class="col-sm-4" id="teacherPage">
                    <h3 id="black-text"> Notifications </h3>
                    @foreach (var notif in Model.notifs)
                    {
                        <p id="black-text">
                            @Html.DisplayFor(Notification => notif.Notification)
                            <a href="@Url.Action("RemoveNotif", "Teachers", new { classID = (notif.ClassID), notifID = (notif.ClassNotificationID)} )">
                                Remove Notification
                            </a>
                        </p>
                    }
                    <a href="@Url.Action("AddNotifToClass", "Teachers", new { ClassID = (Model.cl.ClassID)} )" id="black-text">
                        Add A Notification
                    </a>
                </div>
                <div class="col-lg-4" id="teacherPage">


                    <h4 id="black-text">Pending Students:</h4>
                    <div class="buttonReject">
                        @for (int i = 0; i < Model.users.Count(); i++)
                        {
                            var user = Model.users[i];
                            @Html.DisplayFor(Name => user.UserName)<p style="display:inline;color:black">:</p>
                            <a href="@Url.Action("Accept", "Teachers", new { ClassID = (Model.cl.ClassID), UserID = user.UsersID }, null)">
                                Accept
                            </a>
                            <p style="display:inline">|</p>
                            <a href="@Url.Action("Reject", "Teachers", new { ClassID = (Model.cl.ClassID), UserID = user.UsersID }, null)">
                                Reject
                            </a>
                            <br />

                        }
                    </div>
                </div>
            </div>


        </div>

        <div class="centerDiv">
            <h2 style="color:black;"> Information at a Glance:</h2>
            <table align="center">

                <tr>

                    <td><button class="btn btn-dark" id="upcomingBtn">Needs Grading</button></td>
                    <td  style="display: none"><button class="btn btn-dark" id="otherBtn">Somehing Else</button></td>
                    <td><button class="btn btn-dark" id="testBtn1">Notes</button></td>
                    <td><button class="btn btn-dark" id="testBtn2">Tasks Today</button></td>
                    <td><button class="btn btn-dark" id="infoBtn">About</button></td>

                </tr>

            </table>


        </div>
    </div>


</div>





<!-- Trigger/Open The Modal -->
<!-- The Modal -->
<div id="upcomingModal" class="modal">

    <!-- Modal content -->
    <div class="modal-content">
        <div class="modal-header">
            <span class="close">&times;</span>
            <h2>Assignments to grade:</h2>
        </div>
        <div class="modal-body">


            <div>
                @for (int i = 0, count = 0; i < Model.assignment.Count(); i++, count++)
                {

                    var assi = Model.assignment[i];
                    // if (assi.Name == "test")
                    if (assi.DueDate <= DateTime.Today && count < 3)
                    {
            <div class="block">
                <div class="classItem">
                    <div class="title">
                        @Html.DisplayFor(Name => assi.Name)
                    </div>
                    <div class="description">
                        @Html.DisplayFor(Desc => assi.Description)
                    </div>
                    <div class="dateLeft" style="color:#17252A">
                        Start Date: @Html.DisplayFor(Desc => assi.StartDate)
                    </div>
                    <div class="dateRight" style="color:#17252A">
                        Due Date: @Html.DisplayFor(Desc => assi.DueDate)
                    </div>
                    <a href="@Url.Action("EditAssignment", "Teachers", new { classID = Model.cl.ClassID, assignmentID = assi.AssignmentID })" class="edit">
                        Edit
                    </a>
                    <a href="@Url.Action("SubmissionView", "Teachers", new { classID = Model.cl.ClassID, assignmentID = assi.AssignmentID })" class="submissions">
                        View Submissions
                    </a>
                </div>
            </div>
            <br />
            <br />
                    }
                }
            </div>


        </div>
        <div class="modal-footer">
            <h3>Oodle Assignments</h3>
        </div>
    </div>

</div>







<!-- Trigger/Open The Modal -->
<!-- The Modal -->
<div id="otherModal" class="modal">

    <!-- Modal content -->
    <div class="modal-content">
        <div class="modal-header">
            <span class="close">&times;</span>
            <h2>Quizzes past due:</h2>
        </div>
        <div class="modal-body">






        </div>
        <div class="modal-footer">
            <h3>Oodle Assignments</h3>
        </div>
    </div>

</div>

<div id="upcomingModal" class="modal">

    <!-- Modal content -->
    <div class="modal-content">
        <div class="modal-header">
            <span class="close">&times;</span>
            <h2>Assignments to grade:</h2>
        </div>
        <div class="modal-body">


            <div>
                @for (int i = 0, count = 0; i < Model.assignment.Count(); i++, count++)
                {

                    var assi = Model.assignment[i];
                    // if (assi.Name == "test")
                    if (assi.DueDate >= DateTime.Today && count < 3)
                    {
                        <div class="block">
                            <a href="@Url.Action("AssignmentTurnIn", "Students", new { ClassID = (assi.ClassID), AssignmentID = (assi.AssignmentID) })">
                                <div class="classItem">
                                    <div class="title">
                                        @Html.DisplayFor(Name => assi.Name)
                                    </div>
                                    <div class="description">
                                        @Html.DisplayFor(Desc => assi.Description)
                                    </div>
                                    <div class="dateLeft">
                                        Start Date: @Html.DisplayFor(Desc => assi.StartDate)
                                    </div>
                                    <div class="dateRight">
                                        Due Date: @Html.DisplayFor(Desc => assi.DueDate)
                                    </div>
                                </div>

                            </a>
                        </div>
                        <br />
                        <br />
                    }
                }
            </div>



        </div>
        <div class="modal-footer">
            <h3>Oodle Assignments</h3>
        </div>
    </div>

</div>


<div id="infoModal" class="modal">

    <!-- Modal content -->
    <div class="modal-content">
        <div class="modal-header">
            <span class="close">&times;</span>
            <h2>Oodle Classrooms:</h2>
        </div>
        <div class="modal-body">




            <h3 style="color:black">
                Naviagation Tips:
            </h3>
            <hr />


            <table>
                <tr>
                    <th>Slack</th>
                    <th>Grades</th>
                    <th>Assignments</th>
                    <th>Quizzes</th>
                    <th>Tasks</th>
                </tr>
                <tr>
                    <td>Set up and communicate with your students to talk about upcoming assignments, homework and anything else.</td>
                    <td>View your students submissions and grade accordingly</td>
                    <td>See assignments you have created as well as edit them and create more.</td>
                    <td>Create quizzes for your students to take</td>
                    <td>Create tasks for your students to accomplish.</td>


                </tr>

            </table>


            <hr />
            <h3 style="color:black">
                Support at: Oodleclassrooms@gmail.com <br>
            </h3>




        </div>
        <div class="modal-footer">
            <h3>Oodle Info </h3>
        </div>
    </div>

</div>


<div id="TasksToday" class="modal">

    <!-- Modal content -->
    <div class="modal-content">
        <div class="modal-header">
            <span class="close">&times;</span>
            <h2>Tasks Today</h2>
        </div>
        <div class="modal-body">

            <br /><br />
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-12">



                        <div>
                            @foreach (var i in Model.Tasks)
                            {
                                if (i.ClassID == Model.cl.ClassID)
                                {
                                    var tsk = i;
                                    DateTime today = DateTime.Today;
                                    DateTime toTest = tsk.StartDate.GetValueOrDefault();
                                    System.TimeSpan difference = today.Subtract(toTest);
                                    <!--if (today.Value.TotalHours > -24 && toTest.TotalHours <= 24) -->
                                    if ((today - toTest).Duration().TotalHours <= 24)
                                    {
                                        <div class="block">
                                            <div class="classItem">
                                                <div class="description">
                                                    @Html.DisplayFor(Desc => tsk.Description)
                                                </div>
                                                <div class="dateLeft" style="color:#17252A">
                                                    Start Date: @Html.DisplayFor(Desc => tsk.StartDate)
                                                </div>
                                                <div class="dateRight" style="color:#17252A">
                                                    Due Date: @Html.DisplayFor(Desc => tsk.DueDate)
                                                </div>
                                            </div>
                                        </div>
                                        <br />
                                        <br />
                                    }
                                }

                            }
                        </div>


                    </div>
                </div>
            </div>


        </div>
        <div class="modal-footer">
            <h3>Oodle tasks</h3>
        </div>
    </div>

</div>


<div id="testModal1" class="modal">

    <!-- Modal content -->
    <div class="modal-content">
        <div class="modal-header">
            <span class="close">&times;</span>
            <h2>Notes</h2>
        </div>
        <div class="modal-body">


            <div class="form-style-6">
                <form method="post">
                    <div>
                        <h1>Create a Note</h1>

                        <input type="hidden" name="classID" value="@Model.cl.ClassID" />

                        <label for="description">Description of your Note:</label> <br />
                        <textarea maxlength="510" name="description" placeholder="e.g., Read chapter four and do laundry" required></textarea>


                    </div>
                    <div>
                        <input type="submit" name="submit" value="Create Note" />
                    </div>
                </form>
            </div>


            <div>
                @foreach (var i in Model.Notes)
                {
                    if (i.ClassID == Model.cl.ClassID)
                    {
                        var note = i;
                        <div class="block">
                            <div class="classItem">
                                <div class="description" style="font-size:18px; color:black;">
                                    @Html.DisplayFor(Desc => note.Description)
                                </div>


                            </div>
                        </div>
                        <br />
                        <br />
                    }

                }
            </div>
        </div>

        <div class="modal-footer">
            <h3>Oodle Notes </h3>
        </div>
    </div>

</div>


<script>


    //upcoming MODAL
    // Get the modal
    var modal2 = document.getElementById('upcomingModal');

    // Get the button that opens the modal
    var btn2 = document.getElementById("upcomingBtn");

    // When the user clicks the button, open the modal
    btn2.onclick = function () {
        modal2.style.display = "block";
    }


    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal2) {
            modal2.style.display = "none";
        }
    }



    //other MODAL
    // Get the modal
    var modal7 = document.getElementById('otherModal');

    // Get the button that opens the modal
    var btn7 = document.getElementById("otherBtn");

    // When the user clicks the button, open the modal
    btn7.onclick = function () {
        modal7.style.display = "block";
    }


    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal7) {
            modal7.style.display = "none";
        }
    }


    //info MODAL
    // Get the modal
    var modal3 = document.getElementById('infoModal');

    // Get the button that opens the modal
    var btn3 = document.getElementById("infoBtn");

    // When the user clicks the button, open the modal
    btn3.onclick = function () {
        modal3.style.display = "block";
    }


    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal3) {
            modal3.style.display = "none";

        }
    }






    //tasks MODAL
    // Get the modal
    var modal4 = document.getElementById('TasksToday');

    // Get the button that opens the modal
    var btn4 = document.getElementById("testBtn2");


    // When the user clicks the button, open the modal
    btn4.onclick = function () {
        modal4.style.display = "block";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal4) {

            modal4.style.display = "none";
        }
    }


    //test MODAL
    // Get the modal
    var modal1 = document.getElementById('testModal1');

    // Get the button that opens the modal
    var btn1 = document.getElementById("testBtn1");


    // When the user clicks the button, open the modal
    btn1.onclick = function () {
        modal1.style.display = "block";
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal1 || event.target == modal2 || event.target == modal3 || event.target == modal4 || event.target == modal7) {
            modal1.style.display = "none";
            modal2.style.display = "none";
            modal3.style.display = "none";
            modal7.style.display = "none";
            modal4.style.display = "none";

        }
    }
</script>




@section scripts
    {
    <script type="text/javascript" src="~/Scripts/scriptone.js"></script>
}

