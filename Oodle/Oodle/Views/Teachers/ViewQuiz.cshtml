@model Oodle.Models.ViewModels.TeacherVM

<div class="fontClass">
    <div class="col-lg-6 QuizSide">
        @if (Model.Locked)
    {
        @Html.ActionLink("Edit Quiz", "EditQuiz", "Teachers", new { QuizID = Model.quiz.QuizID, ClassID = Model.quiz.ClassID }, new { @class = "btn btn-default" })
        @Html.ActionLink("Delete Quiz", "RemoveQuiz", "Teachers", new { QuizID = Model.quiz.QuizID, ClassID = Model.quiz.ClassID }, new { @class = "btn btn-default" })
        <p>Quiz is Locked. Quizzes get locked when a student takes  the Quiz. If Locked no changes can be made to questions, and no new questions can be added.</p>
}
        @if (!Model.Locked)
    {
        @Html.ActionLink("Edit Quiz", "EditQuiz", "Teachers", new { QuizID = Model.quiz.QuizID, ClassID = Model.quiz.ClassID }, new { @class = "btn btn-default" })
        @Html.ActionLink("Add Question", "AddQuestion", "Teachers", new { QuizID = Model.quiz.QuizID, ClassID = Model.quiz.ClassID }, new { @class = "btn btn-default" })
        @Html.ActionLink("Delete Quiz", "RemoveQuiz", "Teachers", new { QuizID = Model.quiz.QuizID, ClassID = Model.quiz.ClassID }, new { @class = "btn btn-default" })
}

        <p>
            @Html.DisplayNameFor(Model => Model.quiz.QuizName):
            @Html.DisplayFor(Model => Model.quiz.QuizName)
        </p>
        <p>
            @Html.DisplayNameFor(Model => Model.quiz.StartTime):
            @Html.DisplayFor(Model => Model.quiz.StartTime)
        </p>
        <p>
            @Html.DisplayNameFor(Model => Model.quiz.EndTime):
            @Html.DisplayFor(Model => Model.quiz.EndTime)
        </p>
    </div>
    
    <div class="col-sm-6 ViewQuiz">
        @{int QNum = 0; }
        @foreach (var question in Model.questionList)
        {
        { QNum = QNum + 1; }

        if (!Model.Locked)
        {
        @Html.ActionLink("Edit Question", "EditQuestion", "Teachers", new { QuestionID = question.QuestionID, QuizID = question.QuizID, ClassID = Model.quiz.ClassID }, new { @class = "btn btn-default" })
        @Html.ActionLink("Delete Question", "RemoveQuestion", "Teachers", new { QuestionID = question.QuestionID, QuizID = question.QuizID, ClassID = Model.quiz.ClassID }, new { @class = "btn btn-default" })
        }
        <p>Question @QNum: @question.QuestionText</p>
        <p>Worth: @question.Points points</p>
        <p>Answers</p>
        <ul>
            <li id="FirstQItem">
                <ol>
                    <li>@Model.answerList.Where(a => a.QuestionID == question.QuestionID).FirstOrDefault().Answer1</li>
                    @if (!@Model.answerList.Where(a => a.QuestionID == question.QuestionID).FirstOrDefault().Answer2.IsEmpty())
                {
                    <li>@Model.answerList.Where(a => a.QuestionID == question.QuestionID).FirstOrDefault().Answer2</li>}
                    @if (!@Model.answerList.Where(a => a.QuestionID == question.QuestionID).FirstOrDefault().Answer3.IsEmpty())
                {
                    <li>@Model.answerList.Where(a => a.QuestionID == question.QuestionID).FirstOrDefault().Answer3</li>}
                    @if (!@Model.answerList.Where(a => a.QuestionID == question.QuestionID).FirstOrDefault().Answer4.IsEmpty())
                {
                    <li>@Model.answerList.Where(a => a.QuestionID == question.QuestionID).FirstOrDefault().Answer4</li>}
                </ol>
            </li>
            <li>Correct Answer #:@Model.answerList.Where(a => a.QuestionID == question.QuestionID).FirstOrDefault().CorrectAnswer</li>
        </ul>
        <hr />
}
    </div>
</div>




