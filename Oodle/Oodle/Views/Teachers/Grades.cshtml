@model Oodle.Models.ViewModels.TeacherVM

@{
    ViewBag.Title = "Grades";
}

<h2>Grades</h2>
<div class="slide-toggle2">
    <div>
        <br />
        <!-- fluid -->
        <div class="box-toggle">
            @if(true){
                var number = 0;
                var t = 0;
                foreach (var i in Model.users.ToList())
                {
                    var test = Model.perUser[t];
                    t++;
                    <div class="contorol">

                        <h3>
                            @Html.DisplayFor(Name => i.UserName)
                        </h3>
                        <span class="toggle-info pull-left">
                            <i class="fa fa-plus"></i>
                        </span>
                    </div>
                    <div class="content-box">
                        <div class="black">
                            @for (int i2 = 0; i2 < Model.documents.Count(); i2++)
                            {
                                if(Model.documents[i2] != null) { 
                                    var doc = Model.documents[i2];
                                    var classID = Model.cl.ClassID;
                                    var documentID = doc.Id;
                                    var assignmentID = doc.AssignmentID;
                                    var submittedDate = doc.Date;
                                    var dueDate = doc.Assignment.DueDate;
                                    var late = test.Late[i2];
                                    var stat = test.stat[i2];


                                    <div class="contorol padded">

                                        <div>@doc.Assignment.Name</div>

                                        <a href="@Url.Action("Grade", "Teachers", new { classID = classID, documentID = documentID, assignmentID = assignmentID })"> Grade Assignment </a>
                                        <div>
                                            Current Grade: @if (doc.Grade == -1)
                                            {
                                                <div>Not yet graded.</div>
                                            }
                                            else
                                            {
                                                @Html.DisplayFor(Grade => doc.Grade);
                                            }
                                        </div>
                                    

                                        @if(!stat) {
                                            <div class="dateRight2 late">
                                                Submitted @Html.DisplayFor(date => late.Days) days, @Html.DisplayFor(date => late.Hours) hours, and @Html.DisplayFor(date => late.Minutes) minutes late.
                                            </div>
                                        }
                                        @if(stat) {
                                            <div class="dateRight2 early">
                                                Submitted @Html.DisplayFor(date => late.Days) days, @Html.DisplayFor(date => late.Hours) hours, and @Html.DisplayFor(date => late.Minutes) minutes early.
                                            </div>
                                        }
                                    </div>
                                    <hr />
                                }
                            }
                        </div>
                    </div>
                    <div>
                        Average on Graded Assignments Based off Weights:
                        @Model.classGrade[number]
                    </div>
                    number = number + 1;

                    <hr />
                }
            }
        </div>
    </div>
</div>
<div>

</div>
@section scripts
{
    <script type="text/javascript" src="~/Scripts/scriptone.js"></script>
}