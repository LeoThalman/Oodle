Milestone 2


Tasks

Milestone Part 1.
____________________________________________________________________________________________________________________________________________________________
Primary Needs and Features --
 -- Users
	-- Coaches
		--Features
			--Can see all data
			--Graphs of some sort possibly
			--Record runs (distance/speed/length/time/heart rate/elevation)
			--Training plan
			--Predictive Software
	-- Athletes
		--Features
			--See only their own data
			--Show graphs
			--Show run history
			--Personal Training Plan
			--Predictive future ability

____________________________________________________________________________________________________________________________________________________________
List of Requirements --
 -- Windows
 -- MVC ASP.net 5
 -- Capable of handling a team of 30 students
 -- Capable of multiple coaches if needed
 -- Scalability (Cloud handles this)
 -- Availability is the same as Azure 99%
 -- We will have data backups for recoverability
 -- Maintainability depends on funding


____________________________________________________________________________________________________________________________________________________________
10 User Stories 
1: As a student athlete on my schools cross country team, I want to be able to be able to synch my Garmin GPS watch data to the site so that I and my 
coach are able to view data about my previous runs and make decisions about my training based off the data. 

2: As a coach, I want to be able to view all of my students data in a clean and simple format so that I am able to easily visualize the performance of 
each of my students in order to help them succeed. 

3: As a coach, I want to be able to set goals for my students based off of the data we receive from the equipment the students are using so that the 
students are able to have a goal to aim for.

4: As a student athlete, I want to be able to compare my data with friends of mine so that we are able to better train together and motivate each other
to better reach out goals.
5: As a coach or an athlete I want to be able to view data involving the distance I run, the speed I am running, the length as well as the time and day, 
my heart rate, and my elevation change. 

6: As a coach, I want to be able to create a personalized training plan for my students so that they are able to get a program that matches their specific 
needs.

7: As a athlete, I want to be able to access and comment on my personal training program so that I can work on it and be able to send comments to my coach
when I am needing help or having issues with it.
8. As a student Athlete, I want to be able to make predictions of where my health and abilities might go.
9: As a student Athlete, I want to be able to see a calendar view of my schedule so that I can more easily visualize my weekly or monthly workouts.


 

10: As a coach, I want to be able to award students points for reaching goals and setting positive examples so that at the end of the season I can be 
sure to recognize these individual students for their accomplishments and good work.



____________________________________________________________________________________________________________________________________________________________
Modeling Outputs -- Check Printed Page


____________________________________________________________________________________________________________________________________________________________
Architecture Drawing -- Hardware/software/Network?
-- Azure server dependant on user number.
-- Languages: HTML & CSS, C#, Javascript, SQL, Bootstrap.
-- Visual Studio 2017
-- Garmin Watch
-- Windows Machine
-- Internet


____________________________________________________________________________________________________________________________________________________________
Write a vision statement 
--
For Student athletes and their coaches who want to be able to visualize and better understand their own personal and group cross country workout plans as 
well as set goals, show health based statistics, and make comments on one’s progress, the Student Running System is an information system that will provide
a clean user interface for coaches and students to view information such as time, distance, elevation changes and heart rate during a run. Students and
coaches will also be able to set goals and view detailed schedules in a weekly or monthly format in order to help achieve goals created for students in 
order to help them become better runners. The System will save students and coaches time and effort by giving them an updated version of many of the 
current software or systems in place by giving more options in a single centralized location. Unlike the current sites and manual ways of planning and 
viewing running data, our product will show the information in a much cleaner way as well as give students and coaches more options than ever before to 
better help obtain goals, improve and monitor health, and collaborate with others.
--
____________________________________________________________________________________________________________________________________________________________






Milestone Part 2.

Spiritmountain Web-Based Information Finder

--What is new/original about this idea? What are related websites/apps? (Be able to answer the question: isn’t somebody already doing this?)--
	--This idea was formed during a meeting because of a lack of something in its place. Currently, information is scattered in many different places.
	The goal of this site, would be to bring as much useful information to employees as possible in one place. As far as I know, no one else is 
	currently doing this. 


--Why is this idea worth doing? Why is it useful and not boring?--
	--For us, it is important that the end product be potentially useable by someone. That, and the potential to be paid for our time, even if it isn't
	as much as a true development team would make off of such a task, makes it more interesting! As far as being not boring, if we implement some sort
	of social media into it, for behind the scenes employee communication, we could probably find plenty of interesting things to add to our stack
	from that.


--What resources will be required for you to complete this project that are not already included in the class. i.e. you already have the Microsoft stack, 
server, database so what else would you need? Additional API’s, frameworks or platforms you’ll need to use.--
	--Slack API ?

--What algorithmic content is there in this project? i.e. what algorithm(s) will you have to develop or implement in order to do something central to your 
project idea? (Remember, this isn’t just a software engineering course, it is your CS degree capstone course!)--
	--Algorithm to predict potential busyness in various areas of the casino

--Rate the topic with a difficulty rating of 1-10. One being supremely easy to implement (not necessarily short though). Ten would require the best CS 
students using lots of what they learned in their CS degree, plus additional independent learning, to complete successfully.--
	--6.5
____________________________________________________________________________________________________________________________________________________________

Moodle New & Improved

--What is new/original about this idea? What are related websites/apps? (Be able to answer the question: isn’t somebody already doing this?)--
	--Blackboard and Moodle already exist. Currently with these services their is no ability to customize them. Also, they take an IT department to setup
	vs being simple enough to create classes quickly by a potential professor.

--Why is this idea worth doing? Why is it useful and not boring?--
	--Wouldn't need an IT department. As far as we know it has not been done. Gives smaller entities the ability to create a class.

--What resources will be required for you to complete this project that are not already included in the class. i.e. you already have the Microsoft stack, 
server, database so what else would you need? Additional API’s, frameworks or platforms you’ll need to use.--
	--Quizlet API? 

--What algorithmic content is there in this project? i.e. what algorithm(s) will you have to develop or implement in order to do something central to your 
project idea? (Remember, this isn’t just a software engineering course, it is your CS degree capstone course!)--
	--Class averages, random shuffling of grades, built in professor rating system.

--Rate the topic with a difficulty rating of 1-10. One being supremely easy to implement (not necessarily short though). Ten would require the best CS 
students using lots of what they learned in their CS degree, plus additional independent learning, to complete successfully.--
	--6.5

____________________________________________________________________________________________________________________________________________________________



Milestone Part 3.

--Proof of each member pushing to the repository


1. Fork the development branch to start

2. Clone the repository locally

3. Create a local Feature branch

4. Checkout Feature Branch

5. Make changes

6. Fetch development branch upstream (update your local development)

7. Merge to Develepment branch from feature branch

8. Push up

9. Create a Pull Request 



















